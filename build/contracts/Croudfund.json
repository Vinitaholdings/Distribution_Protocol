{
  "contractName": "Croudfund",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Products/Croudfund.sol\":\"Croudfund\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/Products/Croudfund.sol\":{\"keccak256\":\"0xf8131ba47bb9d04f37d1f310e441deeb4c92c033a632f3bf1dd99d7424c38bcd\",\"urls\":[\"bzz-raw://04f87644eced9183b161d2df0b511debbefb84afa45f0348d4ac122838d646f7\",\"dweb:/ipfs/QmTXrwUgAgQcJwz6tSrGqy4v6FNKMVC1RppYbBTpRRbP4r\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102658061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e610087565b005b6100586100cb565b6040516001600160a01b03909116815260200160405180910390f35b61004e6100823660046101ca565b6100da565b336100906100cb565b6001600160a01b0316146100bf5760405162461bcd60e51b81526004016100b6906101fa565b60405180910390fd5b6100c9600061017a565b565b6000546001600160a01b031690565b336100e36100cb565b6001600160a01b0316146101095760405162461bcd60e51b81526004016100b6906101fa565b6001600160a01b03811661016e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100b6565b6101778161017a565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156101dc57600080fd5b81356001600160a01b03811681146101f357600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220aefbe8f528499ba595290abe5007ef48bd15671fc7322fc3c0b344eaa8eff6a764736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e610087565b005b6100586100cb565b6040516001600160a01b03909116815260200160405180910390f35b61004e6100823660046101ca565b6100da565b336100906100cb565b6001600160a01b0316146100bf5760405162461bcd60e51b81526004016100b6906101fa565b60405180910390fd5b6100c9600061017a565b565b6000546001600160a01b031690565b336100e36100cb565b6001600160a01b0316146101095760405162461bcd60e51b81526004016100b6906101fa565b6001600160a01b03811661016e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100b6565b6101778161017a565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156101dc57600080fd5b81356001600160a01b03811681146101f357600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220aefbe8f528499ba595290abe5007ef48bd15671fc7322fc3c0b344eaa8eff6a764736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1278:74",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:74",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:74"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:74"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:74",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:74",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:74"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:74",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:74"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:74"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:74",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:74",
                "type": ""
              }
            ],
            "src": "14:203:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "292:216:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "338:16:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "347:1:74",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "350:1:74",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "340:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "340:12:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "340:12:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "313:7:74"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "322:9:74"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "309:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "309:23:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "305:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:32:74"
                  },
                  "nodeType": "YulIf",
                  "src": "302:52:74"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "363:36:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "389:9:74"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "376:12:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:23:74"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "367:5:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "462:16:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "471:1:74",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "474:1:74",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "464:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "464:12:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "464:12:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "421:5:74"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "432:5:74"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "447:3:74",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "452:1:74",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "443:3:74"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "443:11:74"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "456:1:74",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "439:3:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "439:19:74"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "428:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "428:31:74"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "418:2:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "418:42:74"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "411:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "411:50:74"
                  },
                  "nodeType": "YulIf",
                  "src": "408:70:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "487:15:74",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "497:5:74"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "487:6:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "258:9:74",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "269:7:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "281:6:74",
                "type": ""
              }
            ],
            "src": "222:286:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "687:182:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "704:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "715:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "697:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "697:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "697:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "738:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "749:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "734:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "734:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "754:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "727:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "727:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "777:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "788:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:18:74"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "793:34:74",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "766:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "766:62:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "837:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "849:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "860:2:74",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "845:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "837:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "664:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "678:4:74",
                "type": ""
              }
            ],
            "src": "513:356:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1048:228:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1065:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1076:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1058:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1058:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1058:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1099:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1110:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1095:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1095:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1115:2:74",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1088:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1088:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1088:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1138:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1149:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1134:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1134:18:74"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1154:34:74",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1127:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1127:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1127:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1209:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1220:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1205:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1205:18:74"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1225:8:74",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1198:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1198:36:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1198:36:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1243:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1255:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1266:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1251:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1243:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1025:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1039:4:74",
                "type": ""
              }
            ],
            "src": "874:402:74"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 74,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "196:44:68:-:0;;;;;;;;;;;;-1:-1:-1;921:32:36;719:10:53;921:18:36;:32::i;:::-;196:44:68;;2270:187:36;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:36;;;-1:-1:-1;;;;;;2378:17:36;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;196:44:68:-;;;;;;;",
  "deployedSourceMap": "196:44:68:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:36;;;:::i;:::-;;1036:85;;;:::i;:::-;;;-1:-1:-1;;;;;178:32:74;;;160:51;;148:2;133:18;1036:85:36;;;;;;;1918:198;;;;;;:::i;:::-;;:::i;1668:101::-;719:10:53;1248:7:36;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:36;;1240:68;;;;-1:-1:-1;;;1240:68:36;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:36;;1036:85::o;1918:198::-;719:10:53;1248:7:36;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:36;;1240:68;;;;-1:-1:-1;;;1240:68:36;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:36;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:36;;1076:2:74;1998:73:36::1;::::0;::::1;1058:21:74::0;1115:2;1095:18;;;1088:30;1154:34;1134:18;;;1127:62;-1:-1:-1;;;1205:18:74;;;1198:36;1251:19;;1998:73:36::1;874:402:74::0;1998:73:36::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:36;;;-1:-1:-1;;;;;;2378:17:36;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;222:286:74:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:74;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:74:o;513:356::-;715:2;697:21;;;734:18;;;727:30;793:34;788:2;773:18;;766:62;860:2;845:18;;513:356::o",
  "source": "pragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Croudfund is Ownable {\r\n\r\n    \r\n\r\n}",
  "sourcePath": "C:\\Users\\USER\\Desktop\\PICARDY_DAO\\contracts\\Products\\Croudfund.sol",
  "ast": {
    "absolutePath": "project:/contracts/Products/Croudfund.sol",
    "exportedSymbols": {
      "AccessControl": [
        7523
      ],
      "Address": [
        11136
      ],
      "Context": [
        11158
      ],
      "Croudfund": [
        13668
      ],
      "ERC165": [
        12020
      ],
      "IAccessControl": [
        7596
      ],
      "IERC165": [
        12032
      ],
      "Ownable": [
        7701
      ],
      "Strings": [
        11435
      ]
    },
    "id": 13669,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13662,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:68"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 13663,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13669,
        "sourceUnit": 11137,
        "src": "27:51:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 13664,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13669,
        "sourceUnit": 7524,
        "src": "80:58:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 13665,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13669,
        "sourceUnit": 7702,
        "src": "140:52:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13666,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7701,
              "src": "218:7:68"
            },
            "id": 13667,
            "nodeType": "InheritanceSpecifier",
            "src": "218:7:68"
          }
        ],
        "canonicalName": "Croudfund",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13668,
        "linearizedBaseContracts": [
          13668,
          7701,
          11158
        ],
        "name": "Croudfund",
        "nameLocation": "205:9:68",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 13669,
        "src": "196:44:68",
        "usedErrors": []
      }
    ],
    "src": "0:240:68"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Products/Croudfund.sol",
    "exportedSymbols": {
      "AccessControl": [
        7523
      ],
      "Address": [
        11136
      ],
      "Context": [
        11158
      ],
      "Croudfund": [
        13668
      ],
      "ERC165": [
        12020
      ],
      "IAccessControl": [
        7596
      ],
      "IERC165": [
        12032
      ],
      "Ownable": [
        7701
      ],
      "Strings": [
        11435
      ]
    },
    "id": 13669,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13662,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:68"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 13663,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13669,
        "sourceUnit": 11137,
        "src": "27:51:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 13664,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13669,
        "sourceUnit": 7524,
        "src": "80:58:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 13665,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13669,
        "sourceUnit": 7702,
        "src": "140:52:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13666,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7701,
              "src": "218:7:68"
            },
            "id": 13667,
            "nodeType": "InheritanceSpecifier",
            "src": "218:7:68"
          }
        ],
        "canonicalName": "Croudfund",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13668,
        "linearizedBaseContracts": [
          13668,
          7701,
          11158
        ],
        "name": "Croudfund",
        "nameLocation": "205:9:68",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 13669,
        "src": "196:44:68",
        "usedErrors": []
      }
    ],
    "src": "0:240:68"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-02T12:41:36.820Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}