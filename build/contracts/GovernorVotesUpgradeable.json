{
  "contractName": "GovernorVotesUpgradeable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COUNTING_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "relay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum IGovernorUpgradeable.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IVotesUpgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernorUpgradeable.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IVotesUpgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token. _Available since v4.3._\",\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns weither `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. Note: The `blockNumber` parameter corresponds to the snaphot used for counting vote. This allows to scale the quroum depending on values such as the totalSupply of a token at this block (see {ERC20Votes}).\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to leave time for users to buy voting power, of delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay, in number of blocks, between the vote start and vote ends. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"getVotes(address,uint256)\":{\"notice\":\"Read the voting weight from the token's built in snapshot mechanism (see {IGovernor-getVotes}).\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol\":\"GovernorVotesUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol\":{\"keccak256\":\"0x12b31461d49b8a1589ef116b3d362314452c9170399df7d008fd48bad44bb1ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80304e449e061d9095a403924a7cbb2ccaf2d190d3129fbc7719c4e0b008eb59\",\"dweb:/ipfs/QmdPYH5oBgdcsy8co36S6DXYQdeEZpMKLPCMNpNUXT4Htr\"]},\"@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol\":{\"keccak256\":\"0xcbbe2908ebd8339c132372673a2284f0b81c64644166dc15ea7b2ad0be80472e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87c6bc87b17eff559109f27a81e4df589ae53bcc4e55335ffa03c98114a5432c\",\"dweb:/ipfs/QmTpkhrtEuQVPuL5ufY8hKtfVb4j5T18gFp76PZbWaUW6E\"]},\"@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol\":{\"keccak256\":\"0xeaed9ce9b909f1e5926327867017cb2d974edcf6369660ff74a60d9bfd6e3dc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65b9dc3e92649bfe56497938ada115d70c454ba3528154b6620edb38497d9f01\",\"dweb:/ipfs/QmTwvkXh8qyqYhHjH1yUCpYTfawcGAts54g39By4HcQxYH\"]},\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x398d3323c1932a5986bf36be7c57593e121e69d5db5b6574b4ee0d031443de37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b268304e03daf22c349abe3c318bc6a6badd6542d62311716ab401eec745f78\",\"dweb:/ipfs/QmNYy2sc2RoTjDhyT6HAibmeDGqfhDiDpsWRbHFHoGVHLr\"]},\"@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol\":{\"keccak256\":\"0xb5dac0ce830eea037a65d37b83863f6a265668a37893b1ac4c01b77c7cf68e9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88d2cf7077d2678429ccc788fd415f08d98596eac88304ca2c61db790ad0b752\",\"dweb:/ipfs/QmNqRrXmZEdWjcJNwurLkFcG1Nm1fztqxf2SpA1DZp1agp\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x6602a65e0277f31f45cad4c7a15b024fd182f2f0e01eaa1954103b0d57848a27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1096735eb76c5232205dc3899045a20d7a10e414afce0b2c41d30cb55c401b5b\",\"dweb:/ipfs/QmTaJFiXqxz7yaxBAefsn5A4KTRE9p9i7nNYkLN7VnGD3Z\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xb4132c3e4beb76a6c6b8c5931abecfc426bbd120d14f065d0cd1411675e88693\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5624b614950e2e2ce4d944624eaaa99d0bb668ed4800964f6de852bf622af63\",\"dweb:/ipfs/QmRkfF8o6pYwifDRdLHaRyTTvRzBkRE8ZQtnZuVa92b8dH\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcec885ecdf113b4265ed0856972d7ff167bfeb3802604b18cbb782bf47ecc4ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a0b06d675e0694a94745bb76ef49e3645eb3af29442f7e079e1d44051c8ab39\",\"dweb:/ipfs/QmSh8Z6REh3HqQ69uCyDfJkirZtHZCn7ZFr74Jte5MmkBp\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/extensions/GovernorVotes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../GovernorUpgradeable.sol\";\nimport \"../utils/IVotesUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token.\n *\n * _Available since v4.3._\n */\nabstract contract GovernorVotesUpgradeable is Initializable, GovernorUpgradeable {\n    IVotesUpgradeable public token;\n\n    function __GovernorVotes_init(IVotesUpgradeable tokenAddress) internal onlyInitializing {\n        __GovernorVotes_init_unchained(tokenAddress);\n    }\n\n    function __GovernorVotes_init_unchained(IVotesUpgradeable tokenAddress) internal onlyInitializing {\n        token = tokenAddress;\n    }\n\n    /**\n     * Read the voting weight from the token's built in snapshot mechanism (see {IGovernor-getVotes}).\n     */\n    function getVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\n        return token.getPastVotes(account, blockNumber);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n",
  "sourcePath": "@openzeppelin\\contracts-upgradeable\\governance\\extensions\\GovernorVotesUpgradeable.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        5604
      ],
      "ContextUpgradeable": [
        5646
      ],
      "ECDSAUpgradeable": [
        6604
      ],
      "EIP712Upgradeable": [
        6754
      ],
      "ERC165Upgradeable": [
        6798
      ],
      "GovernorUpgradeable": [
        1788
      ],
      "GovernorVotesUpgradeable": [
        4623
      ],
      "IERC165Upgradeable": [
        6810
      ],
      "IGovernorUpgradeable": [
        2044
      ],
      "IVotesUpgradeable": [
        4762
      ],
      "Initializable": [
        5225
      ],
      "SafeCastUpgradeable": [
        7203
      ],
      "StringsUpgradeable": [
        5983
      ],
      "TimersUpgradeable": [
        6197
      ]
    },
    "id": 4624,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4562,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "123:23:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol",
        "file": "../GovernorUpgradeable.sol",
        "id": 4563,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4624,
        "sourceUnit": 1789,
        "src": "148:36:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol",
        "file": "../utils/IVotesUpgradeable.sol",
        "id": 4564,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4624,
        "sourceUnit": 4763,
        "src": "185:40:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../proxy/utils/Initializable.sol",
        "id": 4565,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4624,
        "sourceUnit": 5226,
        "src": "226:45:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 4567,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5225,
              "src": "484:13:15"
            },
            "id": 4568,
            "nodeType": "InheritanceSpecifier",
            "src": "484:13:15"
          },
          {
            "baseName": {
              "id": 4569,
              "name": "GovernorUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1788,
              "src": "499:19:15"
            },
            "id": 4570,
            "nodeType": "InheritanceSpecifier",
            "src": "499:19:15"
          }
        ],
        "canonicalName": "GovernorVotesUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4566,
          "nodeType": "StructuredDocumentation",
          "src": "273:164:15",
          "text": " @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token.\n _Available since v4.3._"
        },
        "fullyImplemented": false,
        "id": 4623,
        "linearizedBaseContracts": [
          4623,
          1788,
          2044,
          6754,
          6798,
          6810,
          5646,
          5225
        ],
        "name": "GovernorVotesUpgradeable",
        "nameLocation": "456:24:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 4573,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "550:5:15",
            "nodeType": "VariableDeclaration",
            "scope": 4623,
            "src": "525:30:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
              "typeString": "contract IVotesUpgradeable"
            },
            "typeName": {
              "id": 4572,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4571,
                "name": "IVotesUpgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4762,
                "src": "525:17:15"
              },
              "referencedDeclaration": 4762,
              "src": "525:17:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                "typeString": "contract IVotesUpgradeable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 4585,
              "nodeType": "Block",
              "src": "650:61:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4582,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4576,
                        "src": "691:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                          "typeString": "contract IVotesUpgradeable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                          "typeString": "contract IVotesUpgradeable"
                        }
                      ],
                      "id": 4581,
                      "name": "__GovernorVotes_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4599,
                      "src": "660:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IVotesUpgradeable_$4762_$returns$__$",
                        "typeString": "function (contract IVotesUpgradeable)"
                      }
                    },
                    "id": 4583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "660:44:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4584,
                  "nodeType": "ExpressionStatement",
                  "src": "660:44:15"
                }
              ]
            },
            "id": 4586,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4579,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4578,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5209,
                  "src": "633:16:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "633:16:15"
              }
            ],
            "name": "__GovernorVotes_init",
            "nameLocation": "571:20:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4576,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "610:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4586,
                  "src": "592:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                    "typeString": "contract IVotesUpgradeable"
                  },
                  "typeName": {
                    "id": 4575,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4574,
                      "name": "IVotesUpgradeable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4762,
                      "src": "592:17:15"
                    },
                    "referencedDeclaration": 4762,
                    "src": "592:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                      "typeString": "contract IVotesUpgradeable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "591:32:15"
            },
            "returnParameters": {
              "id": 4580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "650:0:15"
            },
            "scope": 4623,
            "src": "562:149:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4598,
              "nodeType": "Block",
              "src": "815:37:15",
              "statements": [
                {
                  "expression": {
                    "id": 4596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4594,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4573,
                      "src": "825:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                        "typeString": "contract IVotesUpgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4595,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4589,
                      "src": "833:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                        "typeString": "contract IVotesUpgradeable"
                      }
                    },
                    "src": "825:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                      "typeString": "contract IVotesUpgradeable"
                    }
                  },
                  "id": 4597,
                  "nodeType": "ExpressionStatement",
                  "src": "825:20:15"
                }
              ]
            },
            "id": 4599,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4592,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4591,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5209,
                  "src": "798:16:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "798:16:15"
              }
            ],
            "name": "__GovernorVotes_init_unchained",
            "nameLocation": "726:30:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4589,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "775:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4599,
                  "src": "757:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                    "typeString": "contract IVotesUpgradeable"
                  },
                  "typeName": {
                    "id": 4588,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4587,
                      "name": "IVotesUpgradeable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4762,
                      "src": "757:17:15"
                    },
                    "referencedDeclaration": 4762,
                    "src": "757:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                      "typeString": "contract IVotesUpgradeable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "756:32:15"
            },
            "returnParameters": {
              "id": 4593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "815:0:15"
            },
            "scope": 4623,
            "src": "717:135:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1956
            ],
            "body": {
              "id": 4616,
              "nodeType": "Block",
              "src": "1080:64:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4612,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4602,
                        "src": "1116:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4613,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4604,
                        "src": "1125:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4610,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4573,
                        "src": "1097:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                          "typeString": "contract IVotesUpgradeable"
                        }
                      },
                      "id": 4611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPastVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4723,
                      "src": "1097:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:40:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4609,
                  "id": 4615,
                  "nodeType": "Return",
                  "src": "1090:47:15"
                }
              ]
            },
            "documentation": {
              "id": 4600,
              "nodeType": "StructuredDocumentation",
              "src": "858:114:15",
              "text": " Read the voting weight from the token's built in snapshot mechanism (see {IGovernor-getVotes})."
            },
            "functionSelector": "eb9019d4",
            "id": 4617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "986:8:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4606,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1053:8:15"
            },
            "parameters": {
              "id": 4605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4602,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1003:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4617,
                  "src": "995:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4604,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "1020:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4617,
                  "src": "1012:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "994:38:15"
            },
            "returnParameters": {
              "id": 4609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4608,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4617,
                  "src": "1071:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1070:9:15"
            },
            "scope": 4623,
            "src": "977:167:15",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4618,
              "nodeType": "StructuredDocumentation",
              "src": "1150:254:15",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "id": 4622,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1429:5:15",
            "nodeType": "VariableDeclaration",
            "scope": 4623,
            "src": "1409:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 4619,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1409:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 4621,
              "length": {
                "hexValue": "3530",
                "id": 4620,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1417:2:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1409:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 4624,
        "src": "438:999:15",
        "usedErrors": []
      }
    ],
    "src": "123:1315:15"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        5604
      ],
      "ContextUpgradeable": [
        5646
      ],
      "ECDSAUpgradeable": [
        6604
      ],
      "EIP712Upgradeable": [
        6754
      ],
      "ERC165Upgradeable": [
        6798
      ],
      "GovernorUpgradeable": [
        1788
      ],
      "GovernorVotesUpgradeable": [
        4623
      ],
      "IERC165Upgradeable": [
        6810
      ],
      "IGovernorUpgradeable": [
        2044
      ],
      "IVotesUpgradeable": [
        4762
      ],
      "Initializable": [
        5225
      ],
      "SafeCastUpgradeable": [
        7203
      ],
      "StringsUpgradeable": [
        5983
      ],
      "TimersUpgradeable": [
        6197
      ]
    },
    "id": 4624,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4562,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "123:23:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol",
        "file": "../GovernorUpgradeable.sol",
        "id": 4563,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4624,
        "sourceUnit": 1789,
        "src": "148:36:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol",
        "file": "../utils/IVotesUpgradeable.sol",
        "id": 4564,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4624,
        "sourceUnit": 4763,
        "src": "185:40:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../proxy/utils/Initializable.sol",
        "id": 4565,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4624,
        "sourceUnit": 5226,
        "src": "226:45:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 4567,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5225,
              "src": "484:13:15"
            },
            "id": 4568,
            "nodeType": "InheritanceSpecifier",
            "src": "484:13:15"
          },
          {
            "baseName": {
              "id": 4569,
              "name": "GovernorUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1788,
              "src": "499:19:15"
            },
            "id": 4570,
            "nodeType": "InheritanceSpecifier",
            "src": "499:19:15"
          }
        ],
        "canonicalName": "GovernorVotesUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4566,
          "nodeType": "StructuredDocumentation",
          "src": "273:164:15",
          "text": " @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token.\n _Available since v4.3._"
        },
        "fullyImplemented": false,
        "id": 4623,
        "linearizedBaseContracts": [
          4623,
          1788,
          2044,
          6754,
          6798,
          6810,
          5646,
          5225
        ],
        "name": "GovernorVotesUpgradeable",
        "nameLocation": "456:24:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 4573,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "550:5:15",
            "nodeType": "VariableDeclaration",
            "scope": 4623,
            "src": "525:30:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
              "typeString": "contract IVotesUpgradeable"
            },
            "typeName": {
              "id": 4572,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4571,
                "name": "IVotesUpgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4762,
                "src": "525:17:15"
              },
              "referencedDeclaration": 4762,
              "src": "525:17:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                "typeString": "contract IVotesUpgradeable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 4585,
              "nodeType": "Block",
              "src": "650:61:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4582,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4576,
                        "src": "691:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                          "typeString": "contract IVotesUpgradeable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                          "typeString": "contract IVotesUpgradeable"
                        }
                      ],
                      "id": 4581,
                      "name": "__GovernorVotes_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4599,
                      "src": "660:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IVotesUpgradeable_$4762_$returns$__$",
                        "typeString": "function (contract IVotesUpgradeable)"
                      }
                    },
                    "id": 4583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "660:44:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4584,
                  "nodeType": "ExpressionStatement",
                  "src": "660:44:15"
                }
              ]
            },
            "id": 4586,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4579,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4578,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5209,
                  "src": "633:16:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "633:16:15"
              }
            ],
            "name": "__GovernorVotes_init",
            "nameLocation": "571:20:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4576,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "610:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4586,
                  "src": "592:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                    "typeString": "contract IVotesUpgradeable"
                  },
                  "typeName": {
                    "id": 4575,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4574,
                      "name": "IVotesUpgradeable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4762,
                      "src": "592:17:15"
                    },
                    "referencedDeclaration": 4762,
                    "src": "592:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                      "typeString": "contract IVotesUpgradeable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "591:32:15"
            },
            "returnParameters": {
              "id": 4580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "650:0:15"
            },
            "scope": 4623,
            "src": "562:149:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4598,
              "nodeType": "Block",
              "src": "815:37:15",
              "statements": [
                {
                  "expression": {
                    "id": 4596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4594,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4573,
                      "src": "825:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                        "typeString": "contract IVotesUpgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4595,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4589,
                      "src": "833:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                        "typeString": "contract IVotesUpgradeable"
                      }
                    },
                    "src": "825:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                      "typeString": "contract IVotesUpgradeable"
                    }
                  },
                  "id": 4597,
                  "nodeType": "ExpressionStatement",
                  "src": "825:20:15"
                }
              ]
            },
            "id": 4599,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4592,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4591,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5209,
                  "src": "798:16:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "798:16:15"
              }
            ],
            "name": "__GovernorVotes_init_unchained",
            "nameLocation": "726:30:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4589,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "775:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4599,
                  "src": "757:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                    "typeString": "contract IVotesUpgradeable"
                  },
                  "typeName": {
                    "id": 4588,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4587,
                      "name": "IVotesUpgradeable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4762,
                      "src": "757:17:15"
                    },
                    "referencedDeclaration": 4762,
                    "src": "757:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                      "typeString": "contract IVotesUpgradeable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "756:32:15"
            },
            "returnParameters": {
              "id": 4593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "815:0:15"
            },
            "scope": 4623,
            "src": "717:135:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1956
            ],
            "body": {
              "id": 4616,
              "nodeType": "Block",
              "src": "1080:64:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4612,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4602,
                        "src": "1116:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4613,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4604,
                        "src": "1125:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4610,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4573,
                        "src": "1097:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotesUpgradeable_$4762",
                          "typeString": "contract IVotesUpgradeable"
                        }
                      },
                      "id": 4611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPastVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4723,
                      "src": "1097:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:40:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4609,
                  "id": 4615,
                  "nodeType": "Return",
                  "src": "1090:47:15"
                }
              ]
            },
            "documentation": {
              "id": 4600,
              "nodeType": "StructuredDocumentation",
              "src": "858:114:15",
              "text": " Read the voting weight from the token's built in snapshot mechanism (see {IGovernor-getVotes})."
            },
            "functionSelector": "eb9019d4",
            "id": 4617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "986:8:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4606,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1053:8:15"
            },
            "parameters": {
              "id": 4605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4602,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1003:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4617,
                  "src": "995:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4604,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "1020:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 4617,
                  "src": "1012:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "994:38:15"
            },
            "returnParameters": {
              "id": 4609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4608,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4617,
                  "src": "1071:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1070:9:15"
            },
            "scope": 4623,
            "src": "977:167:15",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4618,
              "nodeType": "StructuredDocumentation",
              "src": "1150:254:15",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "id": 4622,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1429:5:15",
            "nodeType": "VariableDeclaration",
            "scope": 4623,
            "src": "1409:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 4619,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1409:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 4621,
              "length": {
                "hexValue": "3530",
                "id": 4620,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1417:2:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1409:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 4624,
        "src": "438:999:15",
        "usedErrors": []
      }
    ],
    "src": "123:1315:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-14T13:10:04.969Z",
  "devdoc": {
    "details": "Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token. _Available since v4.3._",
    "kind": "dev",
    "methods": {
      "COUNTING_MODE()": {
        "details": "A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class."
      },
      "castVote(uint256,uint8)": {
        "details": "See {IGovernor-castVote}."
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "details": "See {IGovernor-castVoteBySig}."
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "details": "See {IGovernor-castVoteWithReason}."
      },
      "execute(address[],uint256[],bytes[],bytes32)": {
        "details": "See {IGovernor-execute}."
      },
      "hasVoted(uint256,address)": {
        "details": "Returns weither `account` has cast a vote on `proposalId`."
      },
      "hashProposal(address[],uint256[],bytes[],bytes32)": {
        "details": "See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts."
      },
      "name()": {
        "details": "See {IGovernor-name}."
      },
      "proposalDeadline(uint256)": {
        "details": "See {IGovernor-proposalDeadline}."
      },
      "proposalSnapshot(uint256)": {
        "details": "See {IGovernor-proposalSnapshot}."
      },
      "proposalThreshold()": {
        "details": "Part of the Governor Bravo's interface: _\"The number of votes required in order for a voter to become a proposer\"_."
      },
      "propose(address[],uint256[],bytes[],string)": {
        "details": "See {IGovernor-propose}."
      },
      "quorum(uint256)": {
        "details": "Minimum number of cast voted required for a proposal to be successful. Note: The `blockNumber` parameter corresponds to the snaphot used for counting vote. This allows to scale the quroum depending on values such as the totalSupply of a token at this block (see {ERC20Votes})."
      },
      "relay(address,uint256,bytes)": {
        "details": "Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant."
      },
      "state(uint256)": {
        "details": "See {IGovernor-state}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "version()": {
        "details": "See {IGovernor-version}."
      },
      "votingDelay()": {
        "details": "Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to leave time for users to buy voting power, of delegate it, before the voting of a proposal starts."
      },
      "votingPeriod()": {
        "details": "Delay, in number of blocks, between the vote start and vote ends. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay."
      }
    },
    "stateVariables": {
      "__gap": {
        "details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "COUNTING_MODE()": {
        "notice": "module:voting"
      },
      "getVotes(address,uint256)": {
        "notice": "Read the voting weight from the token's built in snapshot mechanism (see {IGovernor-getVotes})."
      },
      "hasVoted(uint256,address)": {
        "notice": "module:voting"
      },
      "quorum(uint256)": {
        "notice": "module:user-config"
      },
      "votingDelay()": {
        "notice": "module:user-config"
      },
      "votingPeriod()": {
        "notice": "module:user-config"
      }
    },
    "version": 1
  }
}