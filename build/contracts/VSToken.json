{
  "contractName": "VSToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "VAULT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VAULT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Tokens/VSToken.sol\":\"VSToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Products/PicardyVault.sol\":{\"keccak256\":\"0xae98c39db021a22f54286d62c12d1b7c353c57d01527f0cd3b0c63d8123b17da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba2c9ce2ecec32915f0a78bc8448229784e5f472078862d01d2ad9a4205f155d\",\"dweb:/ipfs/QmcPBXHcew8AZ1b3k6BDFVjVVqUJijpjWYyYpMTjAvoMe8\"]},\"project:/contracts/Tokens/VSToken.sol\":{\"keccak256\":\"0x1b0ae03663fde211c46690a1331e0fa478af777b365f352e48df0b840ad05afc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9410359f785d1d77f7893c2152cf05b429a6ebd8ce509363600f1250181e6964\",\"dweb:/ipfs/Qmf2V69bYKV6zHi6j4RzpcQ2ArUx61ag4swvZDuedkpKQd\"]}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200107f3803806200107f8339810160408190526200003491620001d9565b604080518082018252601381527f50696361726479205661756c7420546f6b656e000000000000000000000000006020808301918252835180850190945260078452662b29aa37b5b2b760c91b908401528151919291620000989160039162000133565b508051620000ae90600490602084019062000133565b505050620000cb620000c5620000dd60201b60201c565b620000e1565b6001600160a01b031660805262000248565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000141906200020b565b90600052602060002090601f016020900481019282620001655760008555620001b0565b82601f106200018057805160ff1916838001178555620001b0565b82800160010185558215620001b0579182015b82811115620001b057825182559160200191906001019062000193565b50620001be929150620001c2565b5090565b5b80821115620001be5760008155600101620001c3565b600060208284031215620001ec57600080fd5b81516001600160a01b03811681146200020457600080fd5b9392505050565b600181811c908216806200022057607f821691505b602082108114156200024257634e487b7160e01b600052602260045260246000fd5b50919050565b608051610e146200026b6000396000818161016d01526104750152610e146000f3fe608060405234801561001057600080fd5b50600436106100db5760003560e01c806306fdde03146100e0578063095ea7b3146100fe57806318160ddd1461012157806323b872dd14610133578063313ce567146101465780633950935114610155578063411557d11461016857806370a082311461019c578063715018a6146101c55780638da5cb5b146101cf57806394bf804d146101d757806395d89b41146101ea578063a457c2d7146101f2578063a9059cbb14610205578063dd62ed3e14610218578063f2fde38b1461022b578063fcd3533c1461023e575b600080fd5b6100e8610251565b6040516100f59190610ba6565b60405180910390f35b61011161010c366004610c17565b6102e3565b60405190151581526020016100f5565b6002545b6040519081526020016100f5565b610111610141366004610c41565b6102fb565b604051601281526020016100f5565b610111610163366004610c17565b61031f565b61018f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516100f59190610c7d565b6101256101aa366004610c91565b6001600160a01b031660009081526020819052604090205490565b6101cd610341565b005b61018f610385565b6101cd6101e5366004610cb3565b610394565b6100e86103d1565b610111610200366004610c17565b6103e0565b610111610213366004610c17565b61045b565b610125610226366004610cdf565b6104e6565b6101cd610239366004610c91565b610511565b6101cd61024c366004610cb3565b6105b1565b60606003805461026090610d09565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610d09565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b6000336102f18185856105ea565b5060019392505050565b60003361030985828561070f565b610314858585610789565b506001949350505050565b6000336102f181858561033283836104e6565b61033c9190610d5a565b6105ea565b3361034a610385565b6001600160a01b0316146103795760405162461bcd60e51b815260040161037090610d72565b60405180910390fd5b6103836000610945565b565b6005546001600160a01b031690565b3361039d610385565b6001600160a01b0316146103c35760405162461bcd60e51b815260040161037090610d72565b6103cd8183610997565b5050565b60606004805461026090610d09565b600033816103ee82866104e6565b90508381101561044e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610370565b61031482868684036105ea565b6040516336751e6960e21b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d9d479a4906104aa908690600401610c7d565b600060405180830381600087803b1580156104c457600080fd5b505af11580156104d8573d6000803e3d6000fd5b505050506102f18383610a64565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3361051a610385565b6001600160a01b0316146105405760405162461bcd60e51b815260040161037090610d72565b6001600160a01b0381166105a55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610370565b6105ae81610945565b50565b336105ba610385565b6001600160a01b0316146105e05760405162461bcd60e51b815260040161037090610d72565b6103cd8183610a72565b6001600160a01b03831661064c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610370565b6001600160a01b0382166106ad5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610370565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061071b84846104e6565b9050600019811461078357818110156107765760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610370565b61078384848484036105ea565b50505050565b6001600160a01b0383166107ed5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610370565b6001600160a01b03821661084f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610370565b6001600160a01b038316600090815260208190526040902054818110156108c75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610370565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108fe908490610d5a565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610dbf8339815191528460405161093891815260200190565b60405180910390a3610783565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166109ed5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610370565b80600260008282546109ff9190610d5a565b90915550506001600160a01b03821660009081526020819052604081208054839290610a2c908490610d5a565b90915550506040518181526001600160a01b03831690600090600080516020610dbf8339815191529060200160405180910390a35050565b6000336102f1818585610789565b6001600160a01b038216610ad25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610370565b6001600160a01b03821660009081526020819052604090205481811015610b465760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610370565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b75908490610da7565b90915550506040518281526000906001600160a01b03851690600080516020610dbf83398151915290602001610702565b600060208083528351808285015260005b81811015610bd357858101830151858201604001528201610bb7565b81811115610be5576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c1257600080fd5b919050565b60008060408385031215610c2a57600080fd5b610c3383610bfb565b946020939093013593505050565b600080600060608486031215610c5657600080fd5b610c5f84610bfb565b9250610c6d60208501610bfb565b9150604084013590509250925092565b6001600160a01b0391909116815260200190565b600060208284031215610ca357600080fd5b610cac82610bfb565b9392505050565b60008060408385031215610cc657600080fd5b82359150610cd660208401610bfb565b90509250929050565b60008060408385031215610cf257600080fd5b610cfb83610bfb565b9150610cd660208401610bfb565b600181811c90821680610d1d57607f821691505b60208210811415610d3e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d6d57610d6d610d44565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610db957610db9610d44565b50039056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205991d1386ec57b7c1c59c4cd80c9c05661264a4c0b02ac2148545afbb024783c64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100db5760003560e01c806306fdde03146100e0578063095ea7b3146100fe57806318160ddd1461012157806323b872dd14610133578063313ce567146101465780633950935114610155578063411557d11461016857806370a082311461019c578063715018a6146101c55780638da5cb5b146101cf57806394bf804d146101d757806395d89b41146101ea578063a457c2d7146101f2578063a9059cbb14610205578063dd62ed3e14610218578063f2fde38b1461022b578063fcd3533c1461023e575b600080fd5b6100e8610251565b6040516100f59190610ba6565b60405180910390f35b61011161010c366004610c17565b6102e3565b60405190151581526020016100f5565b6002545b6040519081526020016100f5565b610111610141366004610c41565b6102fb565b604051601281526020016100f5565b610111610163366004610c17565b61031f565b61018f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516100f59190610c7d565b6101256101aa366004610c91565b6001600160a01b031660009081526020819052604090205490565b6101cd610341565b005b61018f610385565b6101cd6101e5366004610cb3565b610394565b6100e86103d1565b610111610200366004610c17565b6103e0565b610111610213366004610c17565b61045b565b610125610226366004610cdf565b6104e6565b6101cd610239366004610c91565b610511565b6101cd61024c366004610cb3565b6105b1565b60606003805461026090610d09565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610d09565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b6000336102f18185856105ea565b5060019392505050565b60003361030985828561070f565b610314858585610789565b506001949350505050565b6000336102f181858561033283836104e6565b61033c9190610d5a565b6105ea565b3361034a610385565b6001600160a01b0316146103795760405162461bcd60e51b815260040161037090610d72565b60405180910390fd5b6103836000610945565b565b6005546001600160a01b031690565b3361039d610385565b6001600160a01b0316146103c35760405162461bcd60e51b815260040161037090610d72565b6103cd8183610997565b5050565b60606004805461026090610d09565b600033816103ee82866104e6565b90508381101561044e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610370565b61031482868684036105ea565b6040516336751e6960e21b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d9d479a4906104aa908690600401610c7d565b600060405180830381600087803b1580156104c457600080fd5b505af11580156104d8573d6000803e3d6000fd5b505050506102f18383610a64565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3361051a610385565b6001600160a01b0316146105405760405162461bcd60e51b815260040161037090610d72565b6001600160a01b0381166105a55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610370565b6105ae81610945565b50565b336105ba610385565b6001600160a01b0316146105e05760405162461bcd60e51b815260040161037090610d72565b6103cd8183610a72565b6001600160a01b03831661064c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610370565b6001600160a01b0382166106ad5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610370565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061071b84846104e6565b9050600019811461078357818110156107765760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610370565b61078384848484036105ea565b50505050565b6001600160a01b0383166107ed5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610370565b6001600160a01b03821661084f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610370565b6001600160a01b038316600090815260208190526040902054818110156108c75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610370565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108fe908490610d5a565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610dbf8339815191528460405161093891815260200190565b60405180910390a3610783565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166109ed5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610370565b80600260008282546109ff9190610d5a565b90915550506001600160a01b03821660009081526020819052604081208054839290610a2c908490610d5a565b90915550506040518181526001600160a01b03831690600090600080516020610dbf8339815191529060200160405180910390a35050565b6000336102f1818585610789565b6001600160a01b038216610ad25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610370565b6001600160a01b03821660009081526020819052604090205481811015610b465760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610370565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b75908490610da7565b90915550506040518281526000906001600160a01b03851690600080516020610dbf83398151915290602001610702565b600060208083528351808285015260005b81811015610bd357858101830151858201604001528201610bb7565b81811115610be5576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c1257600080fd5b919050565b60008060408385031215610c2a57600080fd5b610c3383610bfb565b946020939093013593505050565b600080600060608486031215610c5657600080fd5b610c5f84610bfb565b9250610c6d60208501610bfb565b9150604084013590509250925092565b6001600160a01b0391909116815260200190565b600060208284031215610ca357600080fd5b610cac82610bfb565b9392505050565b60008060408385031215610cc657600080fd5b82359150610cd660208401610bfb565b90509250929050565b60008060408385031215610cf257600080fd5b610cfb83610bfb565b9150610cd660208401610bfb565b600181811c90821680610d1d57607f821691505b60208210811415610d3e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d6d57610d6d610d44565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610db957610db9610d44565b50039056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205991d1386ec57b7c1c59c4cd80c9c05661264a4c0b02ac2148545afbb024783c64736f6c634300080b0033",
  "immutableReferences": {
    "13792": [
      {
        "length": 32,
        "start": 365
      },
      {
        "length": 32,
        "start": 1141
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:691:59",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:59",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:59"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:59"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:59"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:59",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:59",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:59"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:59"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:59",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:59"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:59"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:59"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:59",
                "type": ""
              }
            ],
            "src": "14:290:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "364:325:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "374:22:59",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "388:1:59",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "391:4:59"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "384:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:12:59"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "374:6:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "405:38:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "435:4:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "441:1:59",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "431:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "431:12:59"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "409:18:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "482:31:59",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "484:27:59",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "498:6:59"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "506:4:59",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "494:3:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "494:17:59"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "484:6:59"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "462:18:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "455:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "455:26:59"
                  },
                  "nodeType": "YulIf",
                  "src": "452:61:59"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "572:111:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "593:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "600:3:59",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "605:10:59",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "596:3:59"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "596:20:59"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "586:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "586:31:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "586:31:59"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "637:1:59",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "640:4:59",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "630:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "630:15:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "630:15:59"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "665:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "668:4:59",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "658:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "658:15:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "658:15:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "528:18:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "559:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "548:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "548:14:59"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "525:2:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:38:59"
                  },
                  "nodeType": "YulIf",
                  "src": "522:161:59"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "344:4:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "353:6:59",
                "type": ""
              }
            ],
            "src": "309:380:59"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 59,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8371:59",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:59",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:476:59",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:59",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:59",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:59"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:59"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:59"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:59"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:59"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:59",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:59",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:59"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:59"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:59"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:59"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:59",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:59"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:59"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:59"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:59"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:59"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:59"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:59"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:59"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:59"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:59"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:59"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:59"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:59"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:59",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:59",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:59"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:59"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:59"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:59"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:59",
                    "statements": []
                  },
                  "src": "294:140:59"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "468:66:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "497:9:59"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "508:6:59"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "493:3:59"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "493:22:59"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "517:2:59",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "489:3:59"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "489:31:59"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "522:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "482:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "482:42:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "482:42:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "449:1:59"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "452:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "446:2:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:13:59"
                  },
                  "nodeType": "YulIf",
                  "src": "443:91:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "543:62:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "559:9:59"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "578:6:59"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "586:2:59",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "574:3:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "574:15:59"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "595:2:59",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "591:3:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "591:7:59"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "570:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "570:29:59"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:45:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "602:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "551:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:54:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "543:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:59",
                "type": ""
              }
            ],
            "src": "14:597:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "665:124:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "675:29:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "697:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "684:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:20:59"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "675:5:59"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "767:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "776:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "779:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "769:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "769:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "769:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "726:5:59"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "737:5:59"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "752:3:59",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "757:1:59",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "748:3:59"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "748:11:59"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "761:1:59",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "744:3:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "744:19:59"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "733:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "733:31:59"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "723:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "723:42:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "716:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:50:59"
                  },
                  "nodeType": "YulIf",
                  "src": "713:70:59"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "655:5:59",
                "type": ""
              }
            ],
            "src": "616:173:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "881:167:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "927:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "936:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "939:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "929:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "929:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "929:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "902:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "911:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "898:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "898:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "894:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "891:52:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "952:39:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "981:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "962:18:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:29:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "952:6:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1000:42:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1027:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1038:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1023:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:18:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1010:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1010:32:59"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1000:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "839:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "850:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "862:6:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "870:6:59",
                "type": ""
              }
            ],
            "src": "794:254:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1148:92:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1170:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1181:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1166:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1166:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1158:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1200:9:59"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1225:6:59"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1218:6:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1218:14:59"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1211:6:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1211:22:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1193:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1193:41:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1193:41:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1117:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1128:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1139:4:59",
                "type": ""
              }
            ],
            "src": "1053:187:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1346:76:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1368:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1379:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1364:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1364:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1356:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1398:9:59"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1409:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1391:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1391:25:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1391:25:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1315:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1326:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1337:4:59",
                "type": ""
              }
            ],
            "src": "1245:177:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1531:224:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1577:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1586:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1589:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1579:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1579:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1579:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1552:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1561:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1548:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1548:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1573:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1544:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1544:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "1541:52:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1602:39:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1631:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1612:18:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1612:29:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1602:6:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1650:48:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1683:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1694:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1679:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1679:18:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1660:18:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1660:38:59"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1650:6:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1707:42:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1734:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1745:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1730:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1730:18:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1717:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1717:32:59"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1707:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1481:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1492:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1504:6:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1512:6:59",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1520:6:59",
                "type": ""
              }
            ],
            "src": "1427:328:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1857:87:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1867:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1879:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1890:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1875:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1875:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1867:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1909:9:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1924:6:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1932:4:59",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1920:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1920:17:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1902:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1902:36:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1902:36:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1826:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1837:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1848:4:59",
                "type": ""
              }
            ],
            "src": "1760:184:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2050:102:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2060:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2072:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2083:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2068:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2068:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2060:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2102:9:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2117:6:59"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2133:3:59",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2138:1:59",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2129:3:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2129:11:59"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2142:1:59",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2125:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2125:19:59"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2113:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2113:32:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2095:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2095:51:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2095:51:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2019:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2030:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2041:4:59",
                "type": ""
              }
            ],
            "src": "1949:203:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2227:116:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2273:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2282:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2285:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2275:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2275:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2275:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2248:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2257:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2244:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2244:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2269:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2240:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2240:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "2237:52:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2298:39:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2327:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2308:18:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2308:29:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2298:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2193:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2204:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2216:6:59",
                "type": ""
              }
            ],
            "src": "2157:186:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2435:167:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2481:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2490:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2493:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2483:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2483:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2483:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2456:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2465:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2452:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2452:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2477:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2448:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2448:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "2445:52:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2506:33:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2529:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2516:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2516:23:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2506:6:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2548:48:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2581:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2592:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2577:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2577:18:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2558:18:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2558:38:59"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2548:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2393:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2404:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2416:6:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2424:6:59",
                "type": ""
              }
            ],
            "src": "2348:254:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2694:173:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2740:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2749:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2752:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2742:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2742:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2742:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2715:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2724:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2711:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2711:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2736:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2707:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2707:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "2704:52:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2765:39:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2794:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2775:18:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2775:29:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2765:6:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2813:48:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2846:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2857:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2842:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2842:18:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2823:18:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2823:38:59"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2813:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2652:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2663:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2675:6:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2683:6:59",
                "type": ""
              }
            ],
            "src": "2607:260:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2927:325:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2937:22:59",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2951:1:59",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2954:4:59"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "2947:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2947:12:59"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2937:6:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2968:38:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2998:4:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3004:1:59",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2994:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2994:12:59"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2972:18:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3045:31:59",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3047:27:59",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3061:6:59"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3069:4:59",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3057:3:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3057:17:59"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3047:6:59"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3025:18:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3018:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3018:26:59"
                  },
                  "nodeType": "YulIf",
                  "src": "3015:61:59"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3135:111:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3156:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3163:3:59",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3168:10:59",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3159:3:59"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3159:20:59"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3149:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3149:31:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3149:31:59"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3200:1:59",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3203:4:59",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3193:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3193:15:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3193:15:59"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3228:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3231:4:59",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3221:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3221:15:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3221:15:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3091:18:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3114:6:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3122:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3111:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3111:14:59"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3088:2:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3088:38:59"
                  },
                  "nodeType": "YulIf",
                  "src": "3085:161:59"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2907:4:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2916:6:59",
                "type": ""
              }
            ],
            "src": "2872:380:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3289:95:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3306:1:59",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3313:3:59",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3318:10:59",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3309:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3309:20:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3299:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3299:31:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3299:31:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3346:1:59",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3349:4:59",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3339:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3339:15:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3339:15:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3370:1:59",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3373:4:59",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3363:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3363:15:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3363:15:59"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3257:127:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3437:80:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3464:22:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3466:16:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3466:18:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3466:18:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3453:1:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3460:1:59"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3456:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3456:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3450:2:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3450:13:59"
                  },
                  "nodeType": "YulIf",
                  "src": "3447:39:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3495:16:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3506:1:59"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3509:1:59"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3502:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3502:9:59"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3495:3:59"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3420:1:59",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3423:1:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3429:3:59",
                "type": ""
              }
            ],
            "src": "3389:128:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3696:182:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3713:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3724:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3706:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3706:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3706:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3747:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3758:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3743:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3743:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3763:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3736:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3736:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3736:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3786:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3797:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3782:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3782:18:59"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3802:34:59",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3775:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3775:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3775:62:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3846:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3858:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3869:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3854:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3854:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3846:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3673:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3687:4:59",
                "type": ""
              }
            ],
            "src": "3522:356:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4057:227:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4074:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4085:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4067:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4067:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4067:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4108:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4119:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4104:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4104:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4124:2:59",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4097:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4097:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4097:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4147:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4158:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4143:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4143:18:59"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4163:34:59",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4136:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4136:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4136:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4218:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4229:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4214:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4214:18:59"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4234:7:59",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4207:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4207:35:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4207:35:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4251:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4263:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4274:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4259:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4259:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4251:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4034:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4048:4:59",
                "type": ""
              }
            ],
            "src": "3883:401:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4463:228:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4480:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4491:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4473:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4473:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4473:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4514:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4525:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4510:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4510:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4530:2:59",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4503:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4503:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4503:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4553:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4564:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4549:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4549:18:59"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4569:34:59",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4542:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4542:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4542:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4624:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4635:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4620:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4620:18:59"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4640:8:59",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4613:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4613:36:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4613:36:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4658:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4670:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4681:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4666:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4666:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4658:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4440:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4454:4:59",
                "type": ""
              }
            ],
            "src": "4289:402:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4870:226:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4887:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4898:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4880:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4880:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4880:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4921:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4932:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4917:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4917:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4937:2:59",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4910:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4910:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4910:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4960:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4971:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4956:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4956:18:59"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4976:34:59",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4949:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4949:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4949:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5031:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5042:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5027:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5027:18:59"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5047:6:59",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5020:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5020:34:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5020:34:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5063:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5075:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5086:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5071:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5071:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5063:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4847:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4861:4:59",
                "type": ""
              }
            ],
            "src": "4696:400:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5275:224:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5292:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5303:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5285:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5285:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5285:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5326:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5337:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5322:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5322:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5342:2:59",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5315:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5315:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5315:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5365:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5376:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5361:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5361:18:59"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5381:34:59",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5354:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5354:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5354:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5436:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5447:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5432:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5432:18:59"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5452:4:59",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5425:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5425:32:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5425:32:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5466:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5478:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5489:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5474:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5474:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5466:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5252:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5266:4:59",
                "type": ""
              }
            ],
            "src": "5101:398:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5678:179:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5695:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5706:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5688:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5688:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5688:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5729:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5740:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5725:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5725:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5745:2:59",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5718:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5718:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5718:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5768:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5779:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5764:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5764:18:59"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5784:31:59",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5757:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5757:59:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5757:59:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5825:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5837:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5848:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5833:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5833:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5825:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5655:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5669:4:59",
                "type": ""
              }
            ],
            "src": "5504:353:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6036:227:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6053:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6064:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6046:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6046:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6046:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6087:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6098:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6083:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6083:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6103:2:59",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6076:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6076:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6076:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6126:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6137:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6122:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6122:18:59"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6142:34:59",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6115:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6115:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6115:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6197:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6208:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6193:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6193:18:59"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6213:7:59",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6186:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6186:35:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6186:35:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6230:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6242:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6253:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6238:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6238:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6230:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6013:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6027:4:59",
                "type": ""
              }
            ],
            "src": "5862:401:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6442:225:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6459:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6470:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6452:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6452:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6452:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6493:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6504:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6489:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6489:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6509:2:59",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6482:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6482:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6482:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6532:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6543:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6528:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6528:18:59"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6548:34:59",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6521:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6521:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6521:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6603:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6614:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6599:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6599:18:59"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6619:5:59",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6592:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6592:33:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6592:33:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6634:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6646:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6657:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6642:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6642:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6634:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6419:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6433:4:59",
                "type": ""
              }
            ],
            "src": "6268:399:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6846:228:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6863:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6874:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6856:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6856:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6856:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6897:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6908:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6893:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6893:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6913:2:59",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6886:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6886:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6886:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6936:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6947:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6932:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6932:18:59"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6952:34:59",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6925:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6925:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6925:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7007:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7018:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7003:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7003:18:59"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7023:8:59",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6996:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6996:36:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6996:36:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7041:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7053:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7064:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7049:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7049:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7041:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6823:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6837:4:59",
                "type": ""
              }
            ],
            "src": "6672:402:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7253:181:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7270:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7281:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7263:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7263:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7263:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7304:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7315:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7300:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7300:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7320:2:59",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7293:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7293:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7293:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7343:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7354:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7339:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7339:18:59"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7359:33:59",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7332:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7332:61:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7332:61:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7402:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7414:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7425:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7410:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7410:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7402:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7230:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7244:4:59",
                "type": ""
              }
            ],
            "src": "7079:355:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7613:223:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7630:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7641:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7623:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7623:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7623:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7664:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7675:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7660:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7660:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7680:2:59",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7653:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7653:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7653:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7703:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7714:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7699:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7699:18:59"
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7719:34:59",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7692:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7692:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7692:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7774:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7785:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7770:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7770:18:59"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7790:3:59",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7763:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7763:31:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7763:31:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7803:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7815:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7826:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7811:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7811:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7803:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7590:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7604:4:59",
                "type": ""
              }
            ],
            "src": "7439:397:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8015:224:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8032:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8043:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8025:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8025:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8025:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8066:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8077:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8062:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8062:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8082:2:59",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8055:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8055:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8055:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8105:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8116:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8101:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8101:18:59"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8121:34:59",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8094:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8094:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8094:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8176:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8187:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8172:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8172:18:59"
                      },
                      {
                        "hexValue": "6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8192:4:59",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8165:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8165:32:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8165:32:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8206:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8218:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8229:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8214:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8214:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8206:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7992:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8006:4:59",
                "type": ""
              }
            ],
            "src": "7841:398:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8293:76:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8315:22:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8317:16:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8317:18:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8317:18:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8309:1:59"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8312:1:59"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8306:2:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8306:8:59"
                  },
                  "nodeType": "YulIf",
                  "src": "8303:34:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8346:17:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8358:1:59"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8361:1:59"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8354:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8354:9:59"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8346:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8275:1:59",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8278:1:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8284:4:59",
                "type": ""
              }
            ],
            "src": "8244:125:59"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
      "id": 59,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "234:616:57:-:0;;;315:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:16;;;;2044:13;;1978:113;;;2044:13;;:5;;:13;:::i;:::-;-1:-1:-1;2067:17:16;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;921:32:2;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;-1:-1:-1;;;;;400:21:57::1;;::::0;234:616;;640:96:29;719:10;;640:96::o;2270:187:2:-;2362:6;;;-1:-1:-1;;;;;2378:17:2;;;-1:-1:-1;;;;;;2378:17:2;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;234:616:57:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;234:616:57;;;-1:-1:-1;234:616:57;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:59;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:59;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:59:o;309:380::-;388:1;384:12;;;;431;;;452:61;;506:4;498:6;494:17;484:27;;452:61;559:2;551:6;548:14;528:18;525:38;522:161;;;605:10;600:3;596:20;593:1;586:31;640:4;637:1;630:15;668:4;665:1;658:15;522:161;;309:380;;;:::o;:::-;234:616:57;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "234:616:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:59;;1211:22;1193:41;;1181:2;1166:18;4433:197:16;1053:187:59;3244:106:16;3331:12;;3244:106;;;1391:25:59;;;1379:2;1364:18;3244:106:16;1245:177:59;5192:286:16;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1902:36:59;;1890:2;1875:18;3093:91:16;1760:184:59;5873:234:16;;;;;;:::i;:::-;;:::i;278:30:57:-;;;;;;;;;;;;:::i;3408:125:16:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:16;3482:7;3508:18;;;;;;;;;;;;3408:125;1668:101:2;;;:::i;:::-;;1036:85;;;:::i;437:97:57:-;;;;;;:::i;:::-;;:::i;2367:102:16:-;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;651:194:57:-;;;;;;:::i;:::-;;:::i;3976:149:16:-;;;;;;:::i;:::-;;:::i;1918:198:2:-;;;;;;:::i;:::-;;:::i;542:101:57:-;;;;;;:::i;:::-;;:::i;2156:98:16:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:29;4570:32:16;719:10:29;4586:7:16;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:16;;4433:197;-1:-1:-1;;;4433:197:16:o;5192:286::-;5319:4;719:10:29;5375:38:16;5391:4;719:10:29;5406:6:16;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:16;;5192:286;-1:-1:-1;;;;5192:286:16:o;5873:234::-;5961:4;719:10:29;6015:64:16;719:10:29;6031:7:16;6068:10;6040:25;719:10:29;6031:7:16;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;1668:101:2:-;719:10:29;1248:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:2;;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1108:6;;-1:-1:-1;;;;;1108:6:2;;1036:85::o;437:97:57:-;719:10:29;1248:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:2;;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;507:19:57::1;513:3;518:7;507:5;:19::i;:::-;437:97:::0;;:::o;2367:102:16:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:29;6687:4:16;6768:25;719:10:29;6785:7:16;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:16;;4085:2:59;6803:85:16;;;4067:21:59;4124:2;4104:18;;;4097:30;4163:34;4143:18;;;4136:62;-1:-1:-1;;;4214:18:59;;;4207:35;4259:19;;6803:85:16;3883:401:59;6803:85:16;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;651:194:57:-;739:39;;-1:-1:-1;;;739:39:57;;722:4;;-1:-1:-1;;;;;753:5:57;739:35;;;;:39;;775:2;;739:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;789:26;804:2;808:6;789:14;:26::i;3976:149:16:-;-1:-1:-1;;;;;4091:18:16;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;1918:198:2:-;719:10:29;1248:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:2;;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:2;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:2;;4491:2:59;1998:73:2::1;::::0;::::1;4473:21:59::0;4530:2;4510:18;;;4503:30;4569:34;4549:18;;;4542:62;-1:-1:-1;;;4620:18:59;;;4613:36;4666:19;;1998:73:2::1;4289:402:59::0;1998:73:2::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;542:101:57:-;719:10:29;1248:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:2;;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;614:21:57::1;620:5;627:7;614:5;:21::i;10119:370:16:-:0;-1:-1:-1;;;;;10250:19:16;;10242:68;;;;-1:-1:-1;;;10242:68:16;;4898:2:59;10242:68:16;;;4880:21:59;4937:2;4917:18;;;4910:30;4976:34;4956:18;;;4949:62;-1:-1:-1;;;5027:18:59;;;5020:34;5071:19;;10242:68:16;4696:400:59;10242:68:16;-1:-1:-1;;;;;10328:21:16;;10320:68;;;;-1:-1:-1;;;10320:68:16;;5303:2:59;10320:68:16;;;5285:21:59;5342:2;5322:18;;;5315:30;5381:34;5361:18;;;5354:62;-1:-1:-1;;;5432:18:59;;;5425:32;5474:19;;10320:68:16;5101:398:59;10320:68:16;-1:-1:-1;;;;;10399:18:16;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10450:32;;1391:25:59;;;10450:32:16;;1364:18:59;10450:32:16;;;;;;;;10119:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:16;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:16;;5706:2:59;11019:68:16;;;5688:21:59;5745:2;5725:18;;;5718:30;5784:31;5764:18;;;5757:59;5833:18;;11019:68:16;5504:353:59;11019:68:16;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7484:651::-;-1:-1:-1;;;;;7610:18:16;;7602:68;;;;-1:-1:-1;;;7602:68:16;;6064:2:59;7602:68:16;;;6046:21:59;6103:2;6083:18;;;6076:30;6142:34;6122:18;;;6115:62;-1:-1:-1;;;6193:18:59;;;6186:35;6238:19;;7602:68:16;5862:401:59;7602:68:16;-1:-1:-1;;;;;7688:16:16;;7680:64;;;;-1:-1:-1;;;7680:64:16;;6470:2:59;7680:64:16;;;6452:21:59;6509:2;6489:18;;;6482:30;6548:34;6528:18;;;6521:62;-1:-1:-1;;;6599:18:59;;;6592:33;6642:19;;7680:64:16;6268:399:59;7680:64:16;-1:-1:-1;;;;;7826:15:16;;7804:19;7826:15;;;;;;;;;;;7859:21;;;;7851:72;;;;-1:-1:-1;;;7851:72:16;;6874:2:59;7851:72:16;;;6856:21:59;6913:2;6893:18;;;6886:30;6952:34;6932:18;;;6925:62;-1:-1:-1;;;7003:18:59;;;6996:36;7049:19;;7851:72:16;6672:402:59;7851:72:16;-1:-1:-1;;;;;7957:15:16;;;:9;:15;;;;;;;;;;;7975:20;;;7957:38;;8015:13;;;;;;;;:23;;7989:6;;7957:9;8015:23;;7989:6;;8015:23;:::i;:::-;;;;;;;;8069:2;-1:-1:-1;;;;;8054:26:16;8063:4;-1:-1:-1;;;;;8054:26:16;-1:-1:-1;;;;;;;;;;;8073:6:16;8054:26;;;;1391:25:59;;1379:2;1364:18;;1245:177;8054:26:16;;;;;;;;8091:37;9120:576;2270:187:2;2362:6;;;-1:-1:-1;;;;;2378:17:2;;;-1:-1:-1;;;;;;2378:17:2;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;8411:389:16:-;-1:-1:-1;;;;;8494:21:16;;8486:65;;;;-1:-1:-1;;;8486:65:16;;7281:2:59;8486:65:16;;;7263:21:59;7320:2;7300:18;;;7293:30;7359:33;7339:18;;;7332:61;7410:18;;8486:65:16;7079:355:59;8486:65:16;8638:6;8622:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8654:18:16;;:9;:18;;;;;;;;;;:28;;8676:6;;8654:9;:28;;8676:6;;8654:28;:::i;:::-;;;;-1:-1:-1;;8697:37:16;;1391:25:59;;;-1:-1:-1;;;;;8697:37:16;;;8714:1;;-1:-1:-1;;;;;;;;;;;8697:37:16;1379:2:59;1364:18;8697:37:16;;;;;;;437:97:57;;:::o;3729:189:16:-;3808:4;719:10:29;3862:28:16;719:10:29;3879:2:16;3883:6;3862:9;:28::i;9120:576::-;-1:-1:-1;;;;;9203:21:16;;9195:67;;;;-1:-1:-1;;;9195:67:16;;7641:2:59;9195:67:16;;;7623:21:59;7680:2;7660:18;;;7653:30;7719:34;7699:18;;;7692:62;-1:-1:-1;;;7770:18:59;;;7763:31;7811:19;;9195:67:16;7439:397:59;9195:67:16;-1:-1:-1;;;;;9358:18:16;;9333:22;9358:18;;;;;;;;;;;9394:24;;;;9386:71;;;;-1:-1:-1;;;9386:71:16;;8043:2:59;9386:71:16;;;8025:21:59;8082:2;8062:18;;;8055:30;8121:34;8101:18;;;8094:62;-1:-1:-1;;;8172:18:59;;;8165:32;8214:19;;9386:71:16;7841:398:59;9386:71:16;-1:-1:-1;;;;;9491:18:16;;:9;:18;;;;;;;;;;9512:23;;;9491:44;;9555:12;:22;;9529:6;;9491:9;9555:22;;9529:6;;9555:22;:::i;:::-;;;;-1:-1:-1;;9593:37:16;;1391:25:59;;;9619:1:16;;-1:-1:-1;;;;;9593:37:16;;;-1:-1:-1;;;;;;;;;;;9593:37:16;1379:2:59;1364:18;9593:37:16;1245:177:59;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:59;574:15;-1:-1:-1;;570:29:59;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:59:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:59;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:59:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:203::-;-1:-1:-1;;;;;2113:32:59;;;;2095:51;;2083:2;2068:18;;1949:203::o;2157:186::-;2216:6;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;2157:186;-1:-1:-1;;;2157:186:59:o;2348:254::-;2416:6;2424;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2529:9;2516:23;2506:33;;2558:38;2592:2;2581:9;2577:18;2558:38;:::i;:::-;2548:48;;2348:254;;;;;:::o;2607:260::-;2675:6;2683;2736:2;2724:9;2715:7;2711:23;2707:32;2704:52;;;2752:1;2749;2742:12;2704:52;2775:29;2794:9;2775:29;:::i;:::-;2765:39;;2823:38;2857:2;2846:9;2842:18;2823:38;:::i;2872:380::-;2951:1;2947:12;;;;2994;;;3015:61;;3069:4;3061:6;3057:17;3047:27;;3015:61;3122:2;3114:6;3111:14;3091:18;3088:38;3085:161;;;3168:10;3163:3;3159:20;3156:1;3149:31;3203:4;3200:1;3193:15;3231:4;3228:1;3221:15;3085:161;;2872:380;;;:::o;3257:127::-;3318:10;3313:3;3309:20;3306:1;3299:31;3349:4;3346:1;3339:15;3373:4;3370:1;3363:15;3389:128;3429:3;3460:1;3456:6;3453:1;3450:13;3447:39;;;3466:18;;:::i;:::-;-1:-1:-1;3502:9:59;;3389:128::o;3522:356::-;3724:2;3706:21;;;3743:18;;;3736:30;3802:34;3797:2;3782:18;;3775:62;3869:2;3854:18;;3522:356::o;8244:125::-;8284:4;8312:1;8309;8306:8;8303:34;;;8317:18;;:::i;:::-;-1:-1:-1;8354:9:59;;8244:125::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {IPicardyVault} from \"../Products/PicardyVault.sol\";\r\n\r\ncontract VSToken is ERC20, Ownable {\r\n\r\n    address immutable public VAULT;\r\n    constructor(address _vaultAddress) ERC20(\"Picardy Vault Token\", \"VSToken\"){\r\n        VAULT = _vaultAddress;\r\n    }\r\n\r\n    function mint(uint _amount, address _to) external onlyOwner{\r\n        _mint(_to, _amount);\r\n    }\r\n\r\n    function burn(uint _amount, address _from) external onlyOwner{\r\n        _burn(_from, _amount);\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) public override returns (bool) {\r\n        IPicardyVault(VAULT).transferUpdate(to);\r\n        super.transfer(to, amount);\r\n        return true;\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\USER\\Desktop\\Picardy_Protocol\\contracts\\Tokens\\VSToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/Tokens/VSToken.sol",
    "exportedSymbols": {
      "Context": [
        7452
      ],
      "ERC20": [
        4791
      ],
      "IERC20": [
        4869
      ],
      "IERC20Metadata": [
        5531
      ],
      "IPicardyVault": [
        12575
      ],
      "Ownable": [
        497
      ],
      "VSToken": [
        13864
      ]
    },
    "id": 13865,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13782,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:57"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 13783,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13865,
        "sourceUnit": 4792,
        "src": "60:55:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 13784,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13865,
        "sourceUnit": 498,
        "src": "117:52:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Products/PicardyVault.sol",
        "file": "../Products/PicardyVault.sol",
        "id": 13786,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13865,
        "sourceUnit": 12576,
        "src": "171:59:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 13785,
              "name": "IPicardyVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "179:13:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13787,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4791,
              "src": "254:5:57"
            },
            "id": 13788,
            "nodeType": "InheritanceSpecifier",
            "src": "254:5:57"
          },
          {
            "baseName": {
              "id": 13789,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 497,
              "src": "261:7:57"
            },
            "id": 13790,
            "nodeType": "InheritanceSpecifier",
            "src": "261:7:57"
          }
        ],
        "canonicalName": "VSToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13864,
        "linearizedBaseContracts": [
          13864,
          497,
          4791,
          5531,
          4869,
          7452
        ],
        "name": "VSToken",
        "nameLocation": "243:7:57",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "411557d1",
            "id": 13792,
            "mutability": "immutable",
            "name": "VAULT",
            "nameLocation": "303:5:57",
            "nodeType": "VariableDeclaration",
            "scope": 13864,
            "src": "278:30:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13791,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "278:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 13805,
              "nodeType": "Block",
              "src": "389:40:57",
              "statements": [
                {
                  "expression": {
                    "id": 13803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13801,
                      "name": "VAULT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13792,
                      "src": "400:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13802,
                      "name": "_vaultAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13794,
                      "src": "408:13:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "400:21:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13804,
                  "nodeType": "ExpressionStatement",
                  "src": "400:21:57"
                }
              ]
            },
            "id": 13806,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "50696361726479205661756c7420546f6b656e",
                    "id": 13797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "356:21:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ac577072221f843385a5e448ff2cc673d825772886c32c964d1e09929cf545c9",
                      "typeString": "literal_string \"Picardy Vault Token\""
                    },
                    "value": "Picardy Vault Token"
                  },
                  {
                    "hexValue": "5653546f6b656e",
                    "id": 13798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "379:9:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_df6082e70a8fcf817f71874a9964a39cbec4b20ca41486b7be3fd6740882ad2a",
                      "typeString": "literal_string \"VSToken\""
                    },
                    "value": "VSToken"
                  }
                ],
                "id": 13799,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13796,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4791,
                  "src": "350:5:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "350:39:57"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13794,
                  "mutability": "mutable",
                  "name": "_vaultAddress",
                  "nameLocation": "335:13:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13806,
                  "src": "327:21:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "327:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "326:23:57"
            },
            "returnParameters": {
              "id": 13800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "389:0:57"
            },
            "scope": 13864,
            "src": "315:114:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13820,
              "nodeType": "Block",
              "src": "496:38:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13816,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13810,
                        "src": "513:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13817,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13808,
                        "src": "518:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13815,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4608,
                      "src": "507:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 13818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "507:19:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13819,
                  "nodeType": "ExpressionStatement",
                  "src": "507:19:57"
                }
              ]
            },
            "functionSelector": "94bf804d",
            "id": 13821,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13813,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13812,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 439,
                  "src": "487:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "487:9:57"
              }
            ],
            "name": "mint",
            "nameLocation": "446:4:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13808,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "456:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13821,
                  "src": "451:12:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13807,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13810,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "473:3:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13821,
                  "src": "465:11:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "450:27:57"
            },
            "returnParameters": {
              "id": 13814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:0:57"
            },
            "scope": 13864,
            "src": "437:97:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 13835,
              "nodeType": "Block",
              "src": "603:40:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13831,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13825,
                        "src": "620:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13832,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13823,
                        "src": "627:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13830,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4680,
                      "src": "614:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 13833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:21:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13834,
                  "nodeType": "ExpressionStatement",
                  "src": "614:21:57"
                }
              ]
            },
            "functionSelector": "fcd3533c",
            "id": 13836,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13828,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13827,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 439,
                  "src": "594:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "594:9:57"
              }
            ],
            "name": "burn",
            "nameLocation": "551:4:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13823,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "561:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13836,
                  "src": "556:12:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13822,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13825,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "578:5:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13836,
                  "src": "570:13:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "555:29:57"
            },
            "returnParameters": {
              "id": 13829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:0:57"
            },
            "scope": 13864,
            "src": "542:101:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4329
            ],
            "body": {
              "id": 13862,
              "nodeType": "Block",
              "src": "728:117:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13850,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13838,
                        "src": "775:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 13847,
                            "name": "VAULT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13792,
                            "src": "753:5:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13846,
                          "name": "IPicardyVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12575,
                          "src": "739:13:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPicardyVault_$12575_$",
                            "typeString": "type(contract IPicardyVault)"
                          }
                        },
                        "id": 13848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "739:20:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPicardyVault_$12575",
                          "typeString": "contract IPicardyVault"
                        }
                      },
                      "id": 13849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferUpdate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12554,
                      "src": "739:35:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "739:39:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13852,
                  "nodeType": "ExpressionStatement",
                  "src": "739:39:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13856,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13838,
                        "src": "804:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13857,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13840,
                        "src": "808:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13853,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "789:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_VSToken_$13864_$",
                          "typeString": "type(contract super VSToken)"
                        }
                      },
                      "id": 13855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4329,
                      "src": "789:14:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 13858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "789:26:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13859,
                  "nodeType": "ExpressionStatement",
                  "src": "789:26:57"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "833:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13845,
                  "id": 13861,
                  "nodeType": "Return",
                  "src": "826:11:57"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 13863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "660:8:57",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13842,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "704:8:57"
            },
            "parameters": {
              "id": 13841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13838,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "677:2:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13863,
                  "src": "669:10:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13840,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "689:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13863,
                  "src": "681:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "668:28:57"
            },
            "returnParameters": {
              "id": 13845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13844,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13863,
                  "src": "722:4:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13843,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "721:6:57"
            },
            "scope": 13864,
            "src": "651:194:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13865,
        "src": "234:616:57",
        "usedErrors": []
      }
    ],
    "src": "33:817:57"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Tokens/VSToken.sol",
    "exportedSymbols": {
      "Context": [
        7452
      ],
      "ERC20": [
        4791
      ],
      "IERC20": [
        4869
      ],
      "IERC20Metadata": [
        5531
      ],
      "IPicardyVault": [
        12575
      ],
      "Ownable": [
        497
      ],
      "VSToken": [
        13864
      ]
    },
    "id": 13865,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13782,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:57"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 13783,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13865,
        "sourceUnit": 4792,
        "src": "60:55:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 13784,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13865,
        "sourceUnit": 498,
        "src": "117:52:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Products/PicardyVault.sol",
        "file": "../Products/PicardyVault.sol",
        "id": 13786,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13865,
        "sourceUnit": 12576,
        "src": "171:59:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 13785,
              "name": "IPicardyVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "179:13:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13787,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4791,
              "src": "254:5:57"
            },
            "id": 13788,
            "nodeType": "InheritanceSpecifier",
            "src": "254:5:57"
          },
          {
            "baseName": {
              "id": 13789,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 497,
              "src": "261:7:57"
            },
            "id": 13790,
            "nodeType": "InheritanceSpecifier",
            "src": "261:7:57"
          }
        ],
        "canonicalName": "VSToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13864,
        "linearizedBaseContracts": [
          13864,
          497,
          4791,
          5531,
          4869,
          7452
        ],
        "name": "VSToken",
        "nameLocation": "243:7:57",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "411557d1",
            "id": 13792,
            "mutability": "immutable",
            "name": "VAULT",
            "nameLocation": "303:5:57",
            "nodeType": "VariableDeclaration",
            "scope": 13864,
            "src": "278:30:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13791,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "278:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 13805,
              "nodeType": "Block",
              "src": "389:40:57",
              "statements": [
                {
                  "expression": {
                    "id": 13803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13801,
                      "name": "VAULT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13792,
                      "src": "400:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13802,
                      "name": "_vaultAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13794,
                      "src": "408:13:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "400:21:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13804,
                  "nodeType": "ExpressionStatement",
                  "src": "400:21:57"
                }
              ]
            },
            "id": 13806,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "50696361726479205661756c7420546f6b656e",
                    "id": 13797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "356:21:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ac577072221f843385a5e448ff2cc673d825772886c32c964d1e09929cf545c9",
                      "typeString": "literal_string \"Picardy Vault Token\""
                    },
                    "value": "Picardy Vault Token"
                  },
                  {
                    "hexValue": "5653546f6b656e",
                    "id": 13798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "379:9:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_df6082e70a8fcf817f71874a9964a39cbec4b20ca41486b7be3fd6740882ad2a",
                      "typeString": "literal_string \"VSToken\""
                    },
                    "value": "VSToken"
                  }
                ],
                "id": 13799,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13796,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4791,
                  "src": "350:5:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "350:39:57"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13794,
                  "mutability": "mutable",
                  "name": "_vaultAddress",
                  "nameLocation": "335:13:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13806,
                  "src": "327:21:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "327:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "326:23:57"
            },
            "returnParameters": {
              "id": 13800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "389:0:57"
            },
            "scope": 13864,
            "src": "315:114:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13820,
              "nodeType": "Block",
              "src": "496:38:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13816,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13810,
                        "src": "513:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13817,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13808,
                        "src": "518:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13815,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4608,
                      "src": "507:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 13818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "507:19:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13819,
                  "nodeType": "ExpressionStatement",
                  "src": "507:19:57"
                }
              ]
            },
            "functionSelector": "94bf804d",
            "id": 13821,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13813,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13812,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 439,
                  "src": "487:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "487:9:57"
              }
            ],
            "name": "mint",
            "nameLocation": "446:4:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13808,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "456:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13821,
                  "src": "451:12:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13807,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13810,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "473:3:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13821,
                  "src": "465:11:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "450:27:57"
            },
            "returnParameters": {
              "id": 13814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:0:57"
            },
            "scope": 13864,
            "src": "437:97:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 13835,
              "nodeType": "Block",
              "src": "603:40:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13831,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13825,
                        "src": "620:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13832,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13823,
                        "src": "627:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13830,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4680,
                      "src": "614:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 13833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:21:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13834,
                  "nodeType": "ExpressionStatement",
                  "src": "614:21:57"
                }
              ]
            },
            "functionSelector": "fcd3533c",
            "id": 13836,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13828,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13827,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 439,
                  "src": "594:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "594:9:57"
              }
            ],
            "name": "burn",
            "nameLocation": "551:4:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13823,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "561:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13836,
                  "src": "556:12:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13822,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13825,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "578:5:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13836,
                  "src": "570:13:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "555:29:57"
            },
            "returnParameters": {
              "id": 13829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:0:57"
            },
            "scope": 13864,
            "src": "542:101:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4329
            ],
            "body": {
              "id": 13862,
              "nodeType": "Block",
              "src": "728:117:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13850,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13838,
                        "src": "775:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 13847,
                            "name": "VAULT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13792,
                            "src": "753:5:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13846,
                          "name": "IPicardyVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12575,
                          "src": "739:13:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPicardyVault_$12575_$",
                            "typeString": "type(contract IPicardyVault)"
                          }
                        },
                        "id": 13848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "739:20:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPicardyVault_$12575",
                          "typeString": "contract IPicardyVault"
                        }
                      },
                      "id": 13849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferUpdate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12554,
                      "src": "739:35:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "739:39:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13852,
                  "nodeType": "ExpressionStatement",
                  "src": "739:39:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13856,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13838,
                        "src": "804:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13857,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13840,
                        "src": "808:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13853,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "789:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_VSToken_$13864_$",
                          "typeString": "type(contract super VSToken)"
                        }
                      },
                      "id": 13855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4329,
                      "src": "789:14:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 13858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "789:26:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13859,
                  "nodeType": "ExpressionStatement",
                  "src": "789:26:57"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "833:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13845,
                  "id": 13861,
                  "nodeType": "Return",
                  "src": "826:11:57"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 13863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "660:8:57",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13842,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "704:8:57"
            },
            "parameters": {
              "id": 13841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13838,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "677:2:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13863,
                  "src": "669:10:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13840,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "689:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 13863,
                  "src": "681:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "668:28:57"
            },
            "returnParameters": {
              "id": 13845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13844,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13863,
                  "src": "722:4:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13843,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "721:6:57"
            },
            "scope": 13864,
            "src": "651:194:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13865,
        "src": "234:616:57",
        "usedErrors": []
      }
    ],
    "src": "33:817:57"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-06-07T09:43:30.594Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}